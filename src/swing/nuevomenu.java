/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swing;

import com.sun.glass.events.KeyEvent;
import comida.CConstante;
import comida.CIncrementa;
import comida.CIntermitente;
import comida.CNormal;
import comida.Comida;
import comida.ComidaException;
import inputoutput.*;
import java.awt.Color;
import static java.awt.Color.green;
import static java.awt.Color.red;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Collections;
import java.util.Date;

import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import model.Experimento;
import model.FullExperimentException;
import model.Luminosidad;
import model.Poblacion;
import model.PoblacionException;
import ordenacion.Compararpornombre;
import ordenacion.Ordenarporfecha;

/**
 *
 * @author Dani
 */
public class nuevomenu extends javax.swing.JFrame {

    /**
     * Creates new form nuevomenu
     */
    public nuevomenu() {
        this.setLocation(150, 250);
        this.setTitle("Laboratorio de bacterias");

        this.setResizable(false);
        initComponents();

    }

    Experimento ex = null;
    String ruta = null;
    boolean archivoabierto = false;

    private void solonumeros(java.awt.event.KeyEvent evt, JTextField j) {

        char car = evt.getKeyChar();

        if ((car < '0' || car > '9') && (car != (char) KeyEvent.VK_BACKSPACE)) {
            JOptionPane.showMessageDialog(null, "Ingresa un número válido.");
            j.setText("");
        }

    }

    private void solonumerosborrar(java.awt.event.KeyEvent evt, JButton but, JTextField j) {

        char car = evt.getKeyChar();

        if (car >= '0' && car <= '9') {
            but.setEnabled(true);
        } else if ((car < '0' || car > '9') && (car != (char) KeyEvent.VK_BACKSPACE)) {
            JOptionPane.showMessageDialog(null, "Ingresa un número válido.");

            but.setEnabled(false);

        } else if (j.getText().length() == 0) {
            but.setEnabled(false);

        }

    }

    /* public void nuevopanel(int numero){
         Color purple= new Color(153,0,153);
        Color blue=new Color(0,0,255);
        if(numero==0){
           JPanel p= new JPanel();
                      b.setBackground(Color.yellow);

        }if(numero>0&&numero<=3){
            b.setBackground(Color.yellow);
        }
        if(numero>3&&numero<=6){
            b.setBackground(Color.green);
        }
        if(numero>6&&numero<=10){
            b.setBackground(Color.red);
        }if(numero>10&&numero<=15){
            b.setBackground(purple);
        }if(numero>15&&numero<=20){
            b.setBackground(blue);
        }if(numero<20){
            b.setBackground(Color.black);
        }
    }*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pornombre = new javax.swing.JPanel();
        abrirex = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        guardarcoom = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        simula = new javax.swing.JButton();
        pornomre = new javax.swing.JButton();
        visualizar = new javax.swing.JButton();
        fecha = new javax.swing.JButton();
        pornumerodeba = new javax.swing.JButton();
        Validardatod = new javax.swing.JButton();
        crearpoblecio = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        borrartext = new javax.swing.JTextField();
        visulaizartext = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        info = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        simulafield = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        dura = new javax.swing.JTextField();
        nombre = new javax.swing.JTextField();
        COMCONSTANTE = new javax.swing.JTextField();
        temp = new javax.swing.JTextField();
        dia = new javax.swing.JTextField();
        mes = new javax.swing.JTextField();
        lum = new javax.swing.JTextField();
        ano = new javax.swing.JTextField();
        COM30CINCREMENTA = new javax.swing.JTextField();
        com1CINCREMENTA = new javax.swing.JTextField();
        numerodebac = new javax.swing.JTextField();
        tipocom = new javax.swing.JTextField();
        com30CN = new javax.swing.JTextField();
        comdia1CN = new javax.swing.JTextField();
        comdiainter = new javax.swing.JTextField();
        diaintermedio = new javax.swing.JTextField();
        COMCINTERMITENTE = new javax.swing.JTextField();
        rutaa = new javax.swing.JLabel();
        rut = new javax.swing.JLabel();
        crearex = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pornombre.setOpaque(false);

        abrirex.setText("Abrir experimento");
        abrirex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirexActionPerformed(evt);
            }
        });

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        guardarcoom.setText("Guardar como");
        guardarcoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarcoomActionPerformed(evt);
            }
        });

        borrar.setEnabled(false);
        borrar.setText("Borrar");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        simula.setEnabled(false);
        simula.setText("Simular");
        simula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simulaActionPerformed(evt);
            }
        });

        pornomre.setText("por nombre");
        pornomre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pornomreActionPerformed(evt);
            }
        });

        visualizar.setEnabled(false);
        visualizar.setText("Visualizar datos ");
        visualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visualizarActionPerformed(evt);
            }
        });

        fecha.setText("por fecha");
        fecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechaActionPerformed(evt);
            }
        });

        pornumerodeba.setText("por numero de bacterias");
        pornumerodeba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pornumerodebaActionPerformed(evt);
            }
        });

        Validardatod.setText("Validar datos");
        Validardatod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValidardatodActionPerformed(evt);
            }
        });

        crearpoblecio.setEnabled(false);
        crearpoblecio.setText("Crear poblacion");
        crearpoblecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearpoblecioActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel1.setText("Ordenar");

        borrartext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrartextActionPerformed(evt);
            }
        });
        borrartext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                borrartextKeyReleased(evt);
            }
        });

        visulaizartext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visulaizartextActionPerformed(evt);
            }
        });
        visulaizartext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                visulaizartextKeyReleased(evt);
            }
        });

        info.setEditable(false);
        info.setColumns(20);
        info.setRows(5);
        jScrollPane1.setViewportView(info);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Toda la información aparecerá aquí: ");

        simulafield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simulafieldActionPerformed(evt);
            }
        });
        simulafield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                simulafieldKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setText("CREAR POBLACIÓN");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Nombre");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Duración");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Día");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("Año");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Luminosidad");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("Numero inicial de bacterias");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setText("Temperatura");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel13.setText("Tipo de comida");

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setText("1- Comida normal");

        jLabel15.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel15.setText("Cantidad de comida del día intermedio");

        jLabel16.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel16.setText("Cantidad de comida del último día");

        jLabel17.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel17.setText("Día intermedio");

        jLabel18.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel18.setText("2- Comida incrementa");

        jLabel19.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel19.setText("Cantidad de comida del primer dia");

        jLabel21.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel21.setText("4- Comida Intermitente");

        jLabel22.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel22.setText("3- Comida constante");

        jLabel23.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel23.setText("Cantidad de comida ");

        jLabel24.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel24.setText("Mes");

        jLabel25.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel25.setText("Cantidad de comida");

        jLabel26.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel26.setText("Cantidad de comida del primer dia");

        jLabel20.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel20.setText("Cantidad de comida del último día");

        dura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duraActionPerformed(evt);
            }
        });
        dura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                duraKeyReleased(evt);
            }
        });

        nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreActionPerformed(evt);
            }
        });

        COMCONSTANTE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                COMCONSTANTEKeyReleased(evt);
            }
        });

        temp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tempKeyReleased(evt);
            }
        });

        dia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diaActionPerformed(evt);
            }
        });
        dia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                diaKeyReleased(evt);
            }
        });

        mes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                mesKeyReleased(evt);
            }
        });

        ano.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                anoKeyReleased(evt);
            }
        });

        COM30CINCREMENTA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                COM30CINCREMENTAKeyReleased(evt);
            }
        });

        com1CINCREMENTA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                com1CINCREMENTAActionPerformed(evt);
            }
        });
        com1CINCREMENTA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                com1CINCREMENTAKeyReleased(evt);
            }
        });

        numerodebac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numerodebacKeyReleased(evt);
            }
        });

        tipocom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tipocomKeyReleased(evt);
            }
        });

        com30CN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                com30CNKeyReleased(evt);
            }
        });

        comdia1CN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                comdia1CNKeyReleased(evt);
            }
        });

        comdiainter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                comdiainterKeyReleased(evt);
            }
        });

        diaintermedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diaintermedioActionPerformed(evt);
            }
        });
        diaintermedio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                diaintermedioKeyReleased(evt);
            }
        });

        COMCINTERMITENTE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                COMCINTERMITENTEActionPerformed(evt);
            }
        });
        COMCINTERMITENTE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                COMCINTERMITENTEKeyReleased(evt);
            }
        });

        rut.setText(" ");

        crearex.setText("Crear experimento");
        crearex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearexActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Arial Black", 3, 15));
        jLabel27.setText("Daniel Anchuela");

        jLabel28.setFont(new java.awt.Font("Arial Black", 3, 15));
        jLabel28.setText("Algoritmos y Estructuras de Datos");

        jLabel29.setFont(new java.awt.Font("Arial Black", 3, 15));
        jLabel29.setText("Ingeniería biomédica");

        javax.swing.GroupLayout pornombreLayout = new javax.swing.GroupLayout(pornombre);
        pornombre.setLayout(pornombreLayout);
        pornombreLayout.setHorizontalGroup(
            pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pornombreLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pornombreLayout.createSequentialGroup()
                        .addComponent(rutaa)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pornombreLayout.createSequentialGroup()
                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(abrirex)
                            .addGroup(pornombreLayout.createSequentialGroup()
                                .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(crearex))
                                .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pornombreLayout.createSequentialGroup()
                                        .addGap(125, 125, 125)
                                        .addComponent(borrar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(borrartext, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pornombreLayout.createSequentialGroup()
                                        .addGap(109, 109, 109)
                                        .addComponent(guardarcoom))))
                            .addGroup(pornombreLayout.createSequentialGroup()
                                .addComponent(visualizar)
                                .addGap(18, 18, 18)
                                .addComponent(visulaizartext, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(guardar))
                            .addComponent(rut))
                        .addGap(28, 28, 28)
                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pornombreLayout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(106, 106, 106)
                                .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pornombreLayout.createSequentialGroup()
                                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel21)
                                            .addGroup(pornombreLayout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel23))
                                            .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(COMCINTERMITENTE, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(pornombreLayout.createSequentialGroup()
                                                        .addGap(10, 10, 10)
                                                        .addComponent(jLabel25)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(COMCONSTANTE, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(jLabel22)))
                                            .addGroup(pornombreLayout.createSequentialGroup()
                                                .addComponent(jLabel19)
                                                .addGap(18, 18, 18)
                                                .addComponent(comdia1CN, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel14)
                                            .addGroup(pornombreLayout.createSequentialGroup()
                                                .addComponent(jLabel17)
                                                .addGap(18, 18, 18)
                                                .addComponent(diaintermedio, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel18)
                                            .addGroup(pornombreLayout.createSequentialGroup()
                                                .addComponent(jLabel26)
                                                .addGap(18, 18, 18)
                                                .addComponent(com1CINCREMENTA, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pornombreLayout.createSequentialGroup()
                                                .addGap(41, 41, 41)
                                                .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(pornombreLayout.createSequentialGroup()
                                                        .addComponent(jLabel20)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(COM30CINCREMENTA, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(pornombreLayout.createSequentialGroup()
                                                        .addComponent(jLabel16)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(com30CN, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(pornombreLayout.createSequentialGroup()
                                                        .addComponent(jLabel15)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(comdiainter, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pornombreLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Validardatod)
                                                .addGap(57, 57, 57)
                                                .addComponent(crearpoblecio)
                                                .addGap(29, 29, 29))))
                                    .addGroup(pornombreLayout.createSequentialGroup()
                                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pornombreLayout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(28, 28, 28)
                                                .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(65, 65, 65)
                                                .addComponent(jLabel6)
                                                .addGap(35, 35, 35)
                                                .addComponent(dura, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(pornombreLayout.createSequentialGroup()
                                                .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(pornombreLayout.createSequentialGroup()
                                                        .addComponent(jLabel12)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(temp, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(pornombreLayout.createSequentialGroup()
                                                        .addComponent(jLabel13)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(tipocom, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(pornombreLayout.createSequentialGroup()
                                                        .addComponent(jLabel7)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(dia, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jLabel24)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(44, 44, 44)
                                                .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(pornombreLayout.createSequentialGroup()
                                                        .addComponent(jLabel11)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(numerodebac, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(pornombreLayout.createSequentialGroup()
                                                        .addComponent(jLabel10)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(lum, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(pornombreLayout.createSequentialGroup()
                                                        .addComponent(jLabel9)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(ano, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGap(172, 172, 172)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pornombreLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(196, 196, 196))))))
            .addGroup(pornombreLayout.createSequentialGroup()
                .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pornombreLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pornomre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fecha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pornumerodeba))
                    .addGroup(pornombreLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(simula)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(simulafield, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pornombreLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel28)
                            .addComponent(jLabel29))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pornombreLayout.setVerticalGroup(
            pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pornombreLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pornombreLayout.createSequentialGroup()
                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pornombreLayout.createSequentialGroup()
                                .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pornombreLayout.createSequentialGroup()
                                        .addGap(107, 107, 107)
                                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel24)
                                            .addComponent(dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(pornombreLayout.createSequentialGroup()
                                        .addGap(57, 57, 57)
                                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6)
                                            .addComponent(nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(33, 33, 33)
                                .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel10)
                                    .addComponent(temp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel11)
                                    .addComponent(tipocom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(numerodebac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pornombreLayout.createSequentialGroup()
                                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel16)
                                            .addComponent(com30CN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(12, 12, 12)
                                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel15)
                                            .addComponent(comdiainter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(55, 55, 55)
                                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel20)
                                            .addComponent(COM30CINCREMENTA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(pornombreLayout.createSequentialGroup()
                                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel19)
                                            .addComponent(comdia1CN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(12, 12, 12)
                                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel17)
                                            .addComponent(diaintermedio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel26)
                                            .addComponent(com1CINCREMENTA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel22)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel25)
                                            .addComponent(COMCONSTANTE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel21)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(COMCINTERMITENTE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Validardatod)
                                            .addComponent(crearpoblecio, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pornombreLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, Short.MAX_VALUE)
                                .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rutaa))
                    .addGroup(pornombreLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel27)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel28)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel29)
                        .addContainerGap())
                    .addGroup(pornombreLayout.createSequentialGroup()
                        .addComponent(abrirex)
                        .addGap(13, 13, 13)
                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(borrar)
                            .addComponent(borrartext, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(crearex))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pornombreLayout.createSequentialGroup()
                                .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(visualizar)
                                    .addComponent(visulaizartext, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel1))
                            .addGroup(pornombreLayout.createSequentialGroup()
                                .addComponent(guardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(guardarcoom)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pornomre)
                            .addComponent(fecha)
                            .addComponent(pornumerodeba))
                        .addGap(18, 18, 18)
                        .addGroup(pornombreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(simula)
                            .addComponent(simulafield, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rut)
                        .addGap(141, 141, 141))))
        );

        getContentPane().add(pornombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 610));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/Capturas.PNG"))); // NOI18N
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1670, 620));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void crearexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearexActionPerformed
        ex = new Experimento();
    }//GEN-LAST:event_crearexActionPerformed

    private void COMCINTERMITENTEKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_COMCINTERMITENTEKeyReleased
        solonumeros(evt, COMCINTERMITENTE);
    }//GEN-LAST:event_COMCINTERMITENTEKeyReleased

    private void COMCINTERMITENTEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_COMCINTERMITENTEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_COMCINTERMITENTEActionPerformed

    private void diaintermedioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_diaintermedioKeyReleased
        solonumeros(evt, diaintermedio);
    }//GEN-LAST:event_diaintermedioKeyReleased

    private void diaintermedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diaintermedioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diaintermedioActionPerformed

    private void comdiainterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comdiainterKeyReleased
        solonumeros(evt, comdiainter);
    }//GEN-LAST:event_comdiainterKeyReleased

    private void comdia1CNKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comdia1CNKeyReleased
        solonumeros(evt, comdia1CN);
    }//GEN-LAST:event_comdia1CNKeyReleased

    private void com30CNKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_com30CNKeyReleased
        solonumeros(evt, com30CN);
    }//GEN-LAST:event_com30CNKeyReleased

    private void tipocomKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tipocomKeyReleased
        solonumeros(evt, tipocom);
    }//GEN-LAST:event_tipocomKeyReleased

    private void numerodebacKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numerodebacKeyReleased
        solonumeros(evt, numerodebac);
    }//GEN-LAST:event_numerodebacKeyReleased

    private void com1CINCREMENTAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_com1CINCREMENTAKeyReleased
        solonumeros(evt, com1CINCREMENTA);
    }//GEN-LAST:event_com1CINCREMENTAKeyReleased

    private void com1CINCREMENTAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_com1CINCREMENTAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_com1CINCREMENTAActionPerformed

    private void COM30CINCREMENTAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_COM30CINCREMENTAKeyReleased
        solonumeros(evt, COM30CINCREMENTA);
    }//GEN-LAST:event_COM30CINCREMENTAKeyReleased

    private void anoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_anoKeyReleased
        solonumeros(evt, ano);
    }//GEN-LAST:event_anoKeyReleased

    private void mesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mesKeyReleased
        solonumeros(evt, mes);
    }//GEN-LAST:event_mesKeyReleased

    private void diaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_diaKeyReleased
        solonumeros(evt, dia);
    }//GEN-LAST:event_diaKeyReleased

    private void diaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_diaActionPerformed

    private void tempKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tempKeyReleased
        solonumeros(evt, temp);
    }//GEN-LAST:event_tempKeyReleased

    private void COMCONSTANTEKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_COMCONSTANTEKeyReleased
        solonumeros(evt, COMCONSTANTE);
    }//GEN-LAST:event_COMCONSTANTEKeyReleased

    private void nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreActionPerformed

    private void duraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_duraKeyReleased
        solonumeros(evt, dura);
    }//GEN-LAST:event_duraKeyReleased

    private void duraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_duraActionPerformed

    private void simulafieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_simulafieldKeyReleased
        solonumerosborrar(evt, simula, simulafield);
    }//GEN-LAST:event_simulafieldKeyReleased

    private void simulafieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simulafieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_simulafieldActionPerformed

    private void visulaizartextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_visulaizartextKeyReleased
        solonumerosborrar(evt, visualizar, visulaizartext);        // TODO add your handling code here:
    }//GEN-LAST:event_visulaizartextKeyReleased

    private void visulaizartextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visulaizartextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visulaizartextActionPerformed

    private void borrartextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_borrartextKeyReleased
        solonumerosborrar(evt, borrar, borrartext);
    }//GEN-LAST:event_borrartextKeyReleased

    private void borrartextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrartextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_borrartextActionPerformed

    private void crearpoblecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearpoblecioActionPerformed
        try {

            String nombreEx = nombre.getText();
            String myText = dia.getText();

            // meter en un try/catch, si vas por el catch, significa que el chequeo es inválido
            int diainicio = Integer.parseInt(myText);
            myText = mes.getText();
            int mesinicio = Integer.parseInt(myText);
            myText = ano.getText();
            int anoinicio = Integer.parseInt(myText);
            myText = temp.getText();
            int temperatur = Integer.parseInt(myText);
            Date f1 = new Date(diainicio, mesinicio, anoinicio);
            String stringdelumi = lum.getText();
            Luminosidad.Luminos luminosida = Luminosidad.Luminos.valueOf(stringdelumi);

            myText = dura.getText();
            int dura = Integer.parseInt(myText);
            Date fechaFi = new Date();
            fechaFi.setDate(f1.getDate() + dura);
            myText = numerodebac.getText();
            int numeroInicialBacteria = Integer.parseInt(myText);

            myText = tipocom.getText();
            int tipocom = Integer.parseInt(myText);
            int comdiamax = 0;
            int diamax = 0;
            int com1 = 0;
            int com30 = 0;
            int com1incrementa = 0;
            int com30incrementa = 0;
            int com1constante = 0;
            int com1intermitente = 0;
            Comida cnew = null;
            switch (tipocom) {
                case 1://recojo los datos de comida normal
                    myText = comdiainter.getText();
                    comdiamax = Integer.parseInt(myText);
                    myText = diaintermedio.getText();
                    diamax = Integer.parseInt(myText);

                    myText = comdia1CN.getText();

                    com1 = Integer.parseInt(myText);

                    myText = com30CN.getText();
                    com30 = Integer.parseInt(myText);
                     {
                        try {
                            cnew = new CNormal(dura, com1, diamax, comdiamax, com30);
                        } catch (ComidaException ex) {
                            System.out.println(ex.getError());
                        }
                    }
                    break;
                case 2:
                    //en el get comida dia n solo voy a enseñar la parte positiva de lo normal
                    myText = com1CINCREMENTA.getText();
                    com1incrementa = Integer.parseInt(myText);

                    myText = COM30CINCREMENTA.getText();
                    com30incrementa = Integer.parseInt(myText);
                     {
                        try {
                            cnew = new CIncrementa(dura, com1incrementa, com30incrementa);
                        } catch (ComidaException ex) {
                            System.out.println(ex.getError());
                        }
                    }
                    break;
                case 3:
                    myText = COMCONSTANTE.getText();
                    com1constante = Integer.parseInt(myText);
                     {
                        try {
                            cnew = new CConstante(dura, com1constante);
                        } catch (ComidaException ex) {
                            System.out.println(ex.getError());
                        }
                    }

                    break;
                case 4:
                    myText = COMCINTERMITENTE.getText();
                    com1intermitente = Integer.parseInt(myText);
                     {
                        try {
                            cnew = new CIntermitente(dura, com1intermitente);
                        } catch (ComidaException ex) {
                            System.out.println(ex.getError());
                        }
                    }

                    break;
                default:
                    break;
            }
            Poblacion p1 = null;
            try {
                p1 = new Poblacion(nombreEx, f1, dura, fechaFi, numeroInicialBacteria, temperatur, luminosida, tipocom, cnew);// TODO add your handling code here:
            } catch (PoblacionException ex) {
                System.out.println(ex.getError());
            }

            ex.addPopulation(p1);
        } catch (NullPointerException ex1) {
            System.out.println("no has creado ningun experimento");
        }
        dia.setText("");
        nombre.setText("");
        mes.setText("");
        ano.setText("");
        dura.setText("");
        temp.setText("");
        lum.setText("");
        tipocom.setText("");
        numerodebac.setText("");
        comdia1CN.setText("");
        com30CN.setText("");
        diaintermedio.setText("");
        comdiainter.setText("");
        com1CINCREMENTA.setText("");
        COM30CINCREMENTA.setText("");
        COMCONSTANTE.setText("");
        COMCINTERMITENTE.setText("");
        crearpoblecio.setEnabled(false);
        Color c = new Color(240, 240, 240);
        Validardatod.setBackground(c);
    }//GEN-LAST:event_crearpoblecioActionPerformed

    private void ValidardatodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValidardatodActionPerformed
        try {
            Validardatod.setBackground(red);
            int salir = 1;
            int camposllenos = 0;
            if (nombre.getText().length() == 0 || dura.getText().length() == 0 || dia.getText().length() == 0 || mes.getText().length() == 0 || ano.getText().length() == 0 || temp.getText().length() == 0 || lum.getText().length() == 0 || tipocom.getText().length() == 0 || numerodebac.getText().length() == 0) {
                Validardatod.setVisible(true);
                Validardatod.setBackground(red);
                JOptionPane.showMessageDialog(null, "Te has dejado campos vacíos");

                salir = 0;
            } else {
                camposllenos = 1;

            }
            if (camposllenos == 1) {
                String myText = dia.getText();
                // meter en un try/catch, si vas por el catch, significa que el chequeo es inválido
                int diainicio = Integer.parseInt(myText);
                myText = mes.getText();
                int mesinicio = Integer.parseInt(myText);
                myText = ano.getText();
                int anoinicio = Integer.parseInt(myText);

                myText = dura.getText();
                int dura = Integer.parseInt(myText);

                myText = numerodebac.getText();
                int numeroInicialBacteria = Integer.parseInt(myText);
                String stringdelumi = lum.getText();

                myText = tipocom.getText();
                int tipocom = Integer.parseInt(myText);
                float comdiamax = 0;
                int diamax = 0;
                float com1 = 0;
                float com30 = 0;
                float com1incrementa = 0;
                float com30incrementa = 0;
                float com1constante = 0;
                float com1intermitente = 0;
                switch (tipocom) {
                    case 1://recojo los datos de comida normal
                        myText = comdiainter.getText();
                        comdiamax = Float.parseFloat(myText);
                        myText = diaintermedio.getText();
                        diamax = Integer.parseInt(myText);

                        myText = comdia1CN.getText();

                        com1 = Float.parseFloat(myText);

                        myText = com30CN.getText();
                        com30 = Float.parseFloat(myText);

                        break;
                    case 2:
                        //en el get comida dia n solo voy a enseñar la parte positiva de lo normal
                        myText = com1CINCREMENTA.getText();
                        com1incrementa = Float.parseFloat(myText);

                        myText = COM30CINCREMENTA.getText();
                        com30incrementa = Float.parseFloat(myText);
                        break;
                    case 3:
                        myText = COMCONSTANTE.getText();
                        com1constante = Float.parseFloat(myText);
                        break;
                    case 4:
                        myText = COMCINTERMITENTE.getText();
                        com1intermitente = Float.parseFloat(myText);
                        break;
                    default:
                        break;
                }
                if (tipocom < 1 || tipocom > 4) {
                    Validardatod.setVisible(true);
                    Validardatod.setBackground(red);
                    JOptionPane.showMessageDialog(null, "El tipo de comida introducido no es válido.");

                    salir = 0;
                }
                switch (tipocom) {
                    case 1://recojo los datos de comida normal
                        if (com30 > Comida.MAX_COMIDA || com30 < 0) {
                            Validardatod.setVisible(true);
                            Validardatod.setBackground(red);
                            JOptionPane.showMessageDialog(null, "La cantidad de comida del último día no es válida.");

                            salir = 0;
                        }
                        if (com1 > Comida.MAX_COMIDA || com1 < 0) {
                            Validardatod.setVisible(true);
                            Validardatod.setBackground(red);
                            JOptionPane.showMessageDialog(null, "La cantidad de comidad del primer día no es válida.");

                            salir = 0;
                        }
                        if (diamax < 1 || diamax > 30) {
                            Validardatod.setVisible(true);
                            Validardatod.setBackground(red);
                            JOptionPane.showMessageDialog(null, "El dia de comida máxima no es válido.");

                            salir = 0;
                        }
                        if (comdiamax > Comida.MAX_COMIDA || comdiamax < 0) {
                            Validardatod.setVisible(true);
                            Validardatod.setBackground(red);
                            JOptionPane.showMessageDialog(null, "La cantidad de comidad del día máximo no es válida.");

                            salir = 0;
                        }

                        break;
                    case 2:
                        //en el get comida dia n solo voy a enseñar la parte positiva de lo normal
                        if (com30incrementa > Comida.MAX_COMIDA || com30incrementa < 0) {
                            Validardatod.setVisible(true);
                            Validardatod.setBackground(red);
                            JOptionPane.showMessageDialog(null, "La cantidad de comida del último día no es válida.");

                            salir = 0;
                        }
                        if (com1incrementa > Comida.MAX_COMIDA || com1incrementa < 0) {
                            Validardatod.setVisible(true);
                            Validardatod.setBackground(red);
                            JOptionPane.showMessageDialog(null, "La cantidad de comidad del primer día no es válida.");

                            salir = 0;
                        }
                        break;
                    case 3:
                        if (com1constante > Comida.MAX_COMIDA || com1constante < 0) {
                            Validardatod.setVisible(true);
                            Validardatod.setBackground(red);
                            JOptionPane.showMessageDialog(null, "La cantidad de comida no es válida.");

                            salir = 0;
                        }
                        break;
                    case 4:
                        if (com1intermitente > Comida.MAX_COMIDA || com1intermitente < 0) {
                            Validardatod.setVisible(true);
                            Validardatod.setBackground(red);
                            JOptionPane.showMessageDialog(null, "La cantidad de comida no es válida.");

                            salir = 0;
                        }
                        break;
                    default:
                        break;
                }

                if (!(stringdelumi.equals("alta") || stringdelumi.equals("media") || stringdelumi.equals("baja"))) {
                    Validardatod.setVisible(true);
                    Validardatod.setBackground(red);
                    JOptionPane.showMessageDialog(null, "El nivel de luminosidad del experimento no es válido.");

                    salir = 0;
                } else {
                    Luminosidad.Luminos luminosida = Luminosidad.Luminos.valueOf(stringdelumi);
                }
                if (dura < 0) {
                    Validardatod.setVisible(true);
                    Validardatod.setBackground(red);
                    JOptionPane.showMessageDialog(null, "La duración introducida no es válida.");

                    salir = 0;
                }
                if (numeroInicialBacteria < 0) {
                    Validardatod.setVisible(true);
                    Validardatod.setBackground(red);
                    JOptionPane.showMessageDialog(null, "El número inicial de bacterias del experimento no es válido.");

                    salir = 0;
                }

                if (anoinicio < 0) {
                    Validardatod.setVisible(true);
                    Validardatod.setBackground(red);
                    JOptionPane.showMessageDialog(null, "El año de inicio no es válido.");

                    salir = 0;
                }
                if (mesinicio < 1 || mesinicio > 12) {
                    Validardatod.setVisible(true);
                    Validardatod.setBackground(red);
                    JOptionPane.showMessageDialog(null, "El mes de inicio no es válido.");

                    salir = 0;
                }
                if (diainicio < 1 || diainicio > 30) {
                    Validardatod.setVisible(true);
                    Validardatod.setBackground(red);
                    JOptionPane.showMessageDialog(null, "El dia de inicio no es válido.");

                    salir = 0;
                }
                if (salir == 1) {
                    Validardatod.setVisible(true);
                    Validardatod.setBackground(green);
                    JOptionPane.showMessageDialog(null, "Ya puedes crear la población.");

                    crearpoblecio.setEnabled(true);
                }
            }
        } catch (NumberFormatException ex) {
            System.out.println("Los datos no son válidos.");
            Validardatod.setVisible(true);
            Validardatod.setBackground(red);
            JOptionPane.showMessageDialog(null, "Los datos no son válidos.");

        }

        // TODO add your handling code here:
    }//GEN-LAST:event_ValidardatodActionPerformed

    private void pornumerodebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pornumerodebaActionPerformed
        Collections.sort(ex.listadepoblaciones, new Compararpornombre());
        String ordenado = "";
        String acumulado = "";
        for (Poblacion p : ex.listadepoblaciones) {
            ordenado = "" + p.getNombreExp();
            acumulado = acumulado + "\n" + ordenado;
        }
        info.setText(acumulado);// TODO add your handling code here:
    }//GEN-LAST:event_pornumerodebaActionPerformed

    private void fechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechaActionPerformed

        String ordenado = "";
        String acumulado = "";
        Collections.sort(ex.listadepoblaciones, new Ordenarporfecha());
        for (Poblacion p : ex.listadepoblaciones) {
            ordenado = "" + p.getNombreExp();
            acumulado = acumulado + "\n" + ordenado;
        }
        info.setText(acumulado);// TODO add your handling code here:
    }//GEN-LAST:event_fechaActionPerformed

    private void visualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visualizarActionPerformed
        try {
            String myText = visulaizartext.getText();
            int i = Integer.parseInt(myText);

            String poblacion = "" + ex.getPoblacion(i);
            String comida = "";
            String acumulado = "";

            for (int j = 1; j <= ex.getPoblacion(i).getDuracion(); j++) {

                comida = "" + ex.getPoblacion(i).getComida().getComidaDiaN(j);
                acumulado = acumulado + "\n" + comida;
            }
            info.setText(poblacion + acumulado);
        } catch (ComidaException ex2) {
            System.out.println(ex2.getError());

        } catch (FullExperimentException ex2) {
            System.out.println(ex2.getError());
        } catch (IndexOutOfBoundsException ex2) {
            System.out.println("fuera de limites");
        } catch (NullPointerException ex1) {
            System.out.println("no tienes poblaciones guardadas");
        }
        visulaizartext.setText("");
        visualizar.setEnabled(false);

        // TODO add your handling code here:
    }//GEN-LAST:event_visualizarActionPerformed

    private void pornomreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pornomreActionPerformed
        Collections.sort(ex.listadepoblaciones, new Compararpornombre());
        String ordenado = "";
        String acumulado = "";
        for (Poblacion p : ex.listadepoblaciones) {
            ordenado = "" + p.getNombreExp();
            acumulado = acumulado + "\n" + ordenado;
        }
        info.setText(acumulado);// TODO add your handling code here:
    }//GEN-LAST:event_pornomreActionPerformed

    private void simulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simulaActionPerformed

        try {
            String myText = simulafield.getText();
            int i = Integer.parseInt(myText);
            String acumulado = "";
            String line = "";
            int[][] matriz = ex.getPoblacion(i).ejecutarsimulacion(ex.getPoblacion(i));
            System.out.println("esta acción puede llevar unos segundos");
            for (int columnas = 0; columnas < 20; columnas++) {

                for (int filas = 0; filas < 20; filas++) {
                    line = "" + matriz[columnas][filas] + "\t";
                    acumulado = acumulado + line;
                    //nuevopanel(matriz[columnas][filas]);
                }
                acumulado = acumulado + "\n";
                System.out.println("");

            }
            info.setText(acumulado);

        } catch (FullExperimentException ex1) {
            System.out.println(ex1.getError());
        } catch (ComidaException ex1) {
            System.out.println(ex1.getError());
        } catch (NullPointerException ex1) {
            System.out.println("no tienes poblaciones guardadas");

        }
        simulafield.setText("");       // TODO add your handling code here:
        simula.setEnabled(false);    // TODO add your handling code here:
    }//GEN-LAST:event_simulaActionPerformed

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed

        String myText = borrartext.getText();
        int i = Integer.parseInt(myText);

        try {
            ex.borrarpoblacion(i);
        } catch (IndexOutOfBoundsException ex1) {
            System.out.println("el numero de poblacion a borrar no es valido");
        } catch (FullExperimentException ex1) {
            System.out.println(ex1.getError());
        } catch (NullPointerException ex1) {
            System.out.println("no tienes poblaciones guardadas");
        }
        info.setText("Has borrado la poblacion numero: " + i);
        borrartext.setText("");
        borrar.setEnabled(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_borrarActionPerformed

    private void guardarcoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarcoomActionPerformed
        try {

            JFileChooser jf = new JFileChooser();
            jf.showOpenDialog(this);
            File archivo = jf.getSelectedFile();
            String ruta2 = "";
            if (archivo != null) {
                ruta2 = archivo.getAbsolutePath();

            } else {
                System.out.println("error");
            }

            PrintWriter pw = null;
            try {
                pw = new PrintWriter(ruta2);
            } catch (FileNotFoundException ex) {
                System.out.println("");
            }

            try {
                InputOutputFile.guardar(pw, ruta2, ex);
            } catch (IndexOutOfBoundsException ex) {
                System.out.println("fuera de limites");
            } catch (FullExperimentException ex) {
                System.out.println(ex.getError());
            } catch (ComidaException ex) {
                System.out.println(ex.getError());
            }
            pw.close();
        } catch (NullPointerException ex) {
            System.out.println("no tienes creado el experimento ");
        }

        info.setText("información guardada");
        // TODO add your handling code here:
    }//GEN-LAST:event_guardarcoomActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        try {
            String rutaguardar = rut.getText();
            if (archivoabierto == true) {
                PrintWriter pw;
                try {
                    pw = new PrintWriter(rutaguardar);
                    InputOutputFile.guardar(pw, rutaguardar, ex);
                    pw.close();
                } catch (FileNotFoundException ex) {
                    System.out.println("archivo no encontrado");
                } catch (IndexOutOfBoundsException ex) {
                    System.out.println("fuera de limites");
                } catch (FullExperimentException ex) {
                    System.out.println(ex.getError());
                } catch (ComidaException ex) {
                    System.out.println(ex.getError());
                }

            } else {

                guardarcoomActionPerformed(evt);
            }
        } catch (NullPointerException ex) {
            System.out.println("no tienes creado el experimento ");
        }
        info.setText("información guardada");
        // TODO add your handling code here:
    }//GEN-LAST:event_guardarActionPerformed

    private void abrirexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirexActionPerformed
        ex = new Experimento();
        JFileChooser jf = new JFileChooser();
        jf.showOpenDialog(this);
        File archivo = jf.getSelectedFile();
        if (archivo != null) {
            rut.setText(archivo.getAbsolutePath());
            String rutadelarchivo = rut.getText();
            InputOutputFile.getPoblacionFile(rutadelarchivo, ex);
            archivoabierto = true;

        }
        info.setText("Información almacenada");
    }//GEN-LAST:event_abrirexActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(nuevomenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(nuevomenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(nuevomenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(nuevomenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new nuevomenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField COM30CINCREMENTA;
    private javax.swing.JTextField COMCINTERMITENTE;
    private javax.swing.JTextField COMCONSTANTE;
    private javax.swing.JButton Validardatod;
    private javax.swing.JButton abrirex;
    private javax.swing.JTextField ano;
    private javax.swing.JButton borrar;
    private javax.swing.JTextField borrartext;
    private javax.swing.JTextField com1CINCREMENTA;
    private javax.swing.JTextField com30CN;
    private javax.swing.JTextField comdia1CN;
    private javax.swing.JTextField comdiainter;
    private javax.swing.JButton crearex;
    private javax.swing.JButton crearpoblecio;
    private javax.swing.JTextField dia;
    private javax.swing.JTextField diaintermedio;
    private javax.swing.JTextField dura;
    private javax.swing.JButton fecha;
    private javax.swing.JButton guardar;
    private javax.swing.JButton guardarcoom;
    private javax.swing.JTextArea info;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lum;
    private javax.swing.JTextField mes;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField numerodebac;
    private javax.swing.JPanel pornombre;
    private javax.swing.JButton pornomre;
    private javax.swing.JButton pornumerodeba;
    private javax.swing.JLabel rut;
    private javax.swing.JLabel rutaa;
    private javax.swing.JButton simula;
    private javax.swing.JTextField simulafield;
    private javax.swing.JTextField temp;
    private javax.swing.JTextField tipocom;
    private javax.swing.JButton visualizar;
    private javax.swing.JTextField visulaizartext;
    // End of variables declaration//GEN-END:variables

    private void setDate(int i) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
